<?php

namespace OC\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;
/**
 * VisitorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VisitorRepository extends EntityRepository
{
    // Méthode pour trouver les réservations du panier
    public function findArray($array)
    {
        $qb = $this->createQueryBuilder('v')
            ->select('v')
            ->where('v.id IN (:array)')
            ->setParameter('array', $array)
        ;

        return $qb->getQuery()->getResult();
    }


    // Méthode pour retouver un visiteur/réservation
  /*  public function findVisitorById($id)
    {
        $qb = $this->createQueryBuilder('v')
            ->select('v')
            ->join('v.ticket', 't')
            ->join('v.price', 'p')
            ->where('v.id = :id')
            ->andWhere('t.id = v.ticket')
            ->andWhere('p.id = v.price')
            ->setParameter('id', $id)
        ;

        return $qb->getQuery()->getResult();
    }*/

    // Méthode pour trouver les billets d'un client
    public function getVisitorByCustomerId($customerId)
    {
        $qb = $this->createQueryBuilder('v')
            ->select('v, t', 'p', 'c')
            ->join('v.ticket', 't')
            ->join('v.price', 'p')
            ->join('v.customer', 'c')
            ->where('c.id = v.customer AND v.customer = :customerId')
            ->andWhere('v.ticket = t.id')
            ->andWhere('v.price = p.id')
            ->setParameter('customerId', $customerId)
        ;

        return $qb->getQuery()->getResult();
    }

    public function findVisitorById($id)
    {
        $qb = $this->createQueryBuilder('v')
            ->select('v, t', 'p', 'c')
            ->join('v.ticket', 't')
            ->join('v.price', 'p')
            ->join('v.customer', 'c')
            ->where('v.ticket = t.id')
            ->andWhere('v.price = p.id')
            ->andWhere('v.customer = c.id')
            ->andWhere('v.id = :id')
            ->setParameter('id', $id)
        ;

        return $qb->getQuery()->getResult();

    }


    
    
}
